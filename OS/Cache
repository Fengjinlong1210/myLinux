缓存(Cache)是一种高速存储器, 在计算机体系结构中起到重要作用。
它被用于存储最常访问的数据和指令, 以便更快地提供给CPU进行处理, 从而提高计算机系统的性能。

缓存的设计基于局部性原理，即程序在执行时倾向于频繁访问附近的内存地址。
缓存通常分为多级，每一级都有不同的容量和访问速度。最常见的缓存层次是：

L1缓存(一级缓存) 
    位于CPU内部, 距离CPU核心最近, 速度最快。
    它通常分为指令缓存(Instruction Cache)和数据缓存(Data Cache), 分别用于存储指令和数据。

L2缓存(二级缓存)
    通常位于CPU内部, 但距离CPU核心相对较远。
    它的容量比L1缓存大, 但速度稍慢。

L3缓存(三级缓存)
    位于CPU芯片上, 但可能跨越多个核心。它的容量更大，速度相对较慢。

内存中的数据通常会被加载到 Cache 中。Cache 的目标之一就是存储经常被访问的数据，以便在需要时能够更快地访问这些数据，从而提高系统的性能。
当 CPU 需要访问特定的内存位置时，首先会检查 Cache 是否已经包含了该数据。如果数据已经在 Cache 中，CPU 可以直接从 Cache 中读取，这比从主内存中读取要快得多。
这种处理方式被称为缓存命中（Cache Hit）。

然而，如果需要的数据不在 Cache 中，就会发生缓存未命中（Cache Miss）。
在这种情况下，CPU 必须从主内存中读取数据，并将其加载到 Cache 中，以便将来的访问可以更快地完成。

